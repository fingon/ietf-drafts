<?xml version='1.0' ?>
<!--
Created:       Mon Jun 17 04:55:57 2013 mstenber
Last modified: Tue Jun 18 09:05:06 2013 mstenber
Edit time:     275 min
-->
<!DOCTYPE rfc SYSTEM 'rfc2629.dtd'>

<?rfc autobreaks="yes"?>
<?rfc compact="yes"?>
<?rfc strict='yes'?>
<?rfc subcompact="no"?>
<?rfc symrefs="yes"?>
<?rfc toc="yes"?>
<?rfc tocindent="yes"?>

<rfc
    ipr='trust200902'
    docName='draft-stenberg-homenet-hybrid-proxy-and-ospf-00'
    category='std'
    >
  <front>
    <title abbrev="Hybrid Proxy OSPFv3 Zeroconf">
      Hybrid Unicast/Multicast DNS-Based Service Discovery
      Auto-Configuration Using OSPF
    </title>
    <author initials="M" surname="Stenberg" fullname="Markus Stenberg">
      <address>
        <postal>
          <street/>
          <city>Helsinki</city>
          <code>00930</code>
          <country>Finland</country>
        </postal>
        <email>markus.stenberg@iki.fi</email>
      </address>
    </author>
    <date month="June" year="2013" />
    <workgroup>Homenet Working Group</workgroup>
    <keyword>IPv6</keyword>
    <keyword>Homenet</keyword>
    <keyword>OSPFv3</keyword>
    <keyword>DNS-SD</keyword>
    <keyword>mDNS</keyword>
    <abstract>

      <t>This document details how a proxy functioning between Unicast
      DNS-Based Service Discovery and Multicast DNS can be automatically
      configured using automatically configured routing protocol.</t>

    </abstract>
  </front>
  <middle>
    <section title="Introduction">

      <t>Section 3 ("Hybrid Proxy Operation") of <xref
      target="I-D.cheshire-mdnsext-hybrid"/> describes how to translate
      queries from Unicast DNS-Based Service Discovery described in <xref
      target="RFC6763"/> to Multicast DNS described in <xref
      target="RFC6762"/>, and how to filter the responses and translate
      them back to unicast DNS.</t>

      <t>This document describes what sort of configuration the
      participating DNS servers require, as well as how it can be provided
      using auto-configured OSPFv3 described in <xref
      target="I-D.ietf-ospf-ospfv3-autoconfig"/> and a naming scheme which
      does not even need to be same across the whole covered network. The
      scheme can be used to provision both forward and reverse DNS zones
      which employ hybrid proxy for heavy lifting.</t>

      <t>We go through the mandatory specification of the language used in
      <xref target="kwd"/>, then describe what needs to be configured in
      hybrid proxies and participating DNS servers across the network in
      <xref target="what"/>. How the data is exchanged in OSPFv3 is
      described in <xref target="how"/>. Finally, some overall notes on
      desired behavior of different router components is mentioned in <xref
      target="howto"/>. </t>

    </section>


    <section anchor="kwd" title='Requirements language'>

      <t>In this document, the key words "MAY", "MUST, "MUST NOT",
      "OPTIONAL", "RECOMMENDED", "SHOULD", and "SHOULD NOT", are to be
      interpreted as described in <xref target='RFC2119' />.</t>

    </section>

    <section anchor="what" title="Hybrid proxy - what to configure">

      <t>Beyond the low-level translation mechanism between unicast and
      multicast service discovery, the hybrid proxy draft <xref
      target="I-D.cheshire-mdnsext-hybrid"/> describes just that there have
      to be NS records pointing to hybrid proxy responsible for each link
      within the covered network.</t>

      <t>In practise, what we want, is actually forward and reverse zone
      delegation to the appropriate router running hybrid proxy and without
      any conflicts in the per-link forward zone names.</t>

      <t>The links to be covered is also non-trivial choice; we can use the
      border discovery functionality (if available) to determine internal
      and external links. Or we can use OSPFv3 presence (or lack of it) on
      a link to determine internal links within the covered network, and
      some other signs (depending on the deployment) such as DHCPv6 Prefix
      Delegation to determine external links that should not be
      covered.</t>

      <section anchor="conflict" title="Conflict resolution with OSPF">

        <t>Any naming-related choice on a router may have conflicts in the
        network. </t>

        <t>We use similar conflict resolution scheme as described in the
        prefix assignment draft<xref
        target="I-D.arkko-homenet-prefix-assignment"/>. That is, if a
        conflict is encountered, the router with highest router ID MUST
        keep the name they have chosen. The one(s) with lower router ID
        MUST either try different one (that is not in use at all according
        to the current link state information), or choose not to publish
        the name altogether.</t>

        <t>If router needs to pick a different name, any algorithm works,
        although simple algorithm choice is just like the one described in
        Multicast DNS<xref target="RFC6762"/>: append -2, -3, and so forth,
        until there are no conflicts in the network for the given name.</t>

      </section>

      <section title="Per-link DNS-SD forward zone names">

        <t>How to name the links of a whole network in automated fashion? Two
        different approaches seem obvious:

        <list style="numbers">
          <t>
            Unique link name based - (unique-link).(domain).
          </t>
          <t>
            Router and link name - (link).(router).(domain).
          </t>
        </list>

        The first choice is appealing as it can be much more friendly
        (especially given manual configuration). For example, it could mean
        just lan.example.com and wlan.example.com for a simple home
        network. The second choice, on the other hand, has a nice property
        of being local choice as long as router name can be made
        unique.</t>

        <t>The type of naming scheme to use can be left as implementation
        option. And the actual names themselves SHOULD be also overridable,
        if the end-user wants to customize them in some way. </t>

      </section>

      <section title="Reasonable defaults">

        <t>Note that any manual configuration, which SHOULD be possible,
        MUST override the defaults provided here or chosen by the creator
        of the implementation.</t>

        <section title="Network-wide unique link name (scheme 1)">

          <t>It is not obvious how to produce network-wide unique link
          names for the (unique-link).(domain) scheme. One option would be
          to base it on type of physical network layer, and then hope that
          the number of the networks won't be significant enough to confuse
          (e.g. "lan", or "wlan"). </t>

          <t>In general network-wide unique link names should be only used
          in small networks. Given larger network, after conflict
          resolution, finding which network is 'lan-42.example.com'
          may be challenging.</t>
        </section>

        <section anchor="rname" title="Router name (scheme 2)">

          <t>Recommendation is to use some short form which indicates the
          type of router it is, for example, "openwrt.example.com". As the
          name is visible to users, it should be kept as short as
          possible. If theory even more exact model could be helpful, for
          example, "openwrt-buffalo-wzr-600-dhr.example.com".  In practise,
          though, providing some other records indicating exact router
          information (and access to management UI) might be more sensible.
          </t>

          <t>If scheme 2 is used, and there is no desire to implement
          conflict resolution related TLV described in <xref
          target="router-name-tlv"/>, a safe default might be to default to
          router ID; that is, use as router name value such as r-(router ID
          as single 32-bit number). It is guaranteed to be unique across
          the network, but not as user-friendly as the descriptive router
          name promoted here.</t>

        </section>

        <section anchor="lname" title="Link name (scheme 2)">

          <t>Recommendation for (link) portion of (link).(router).(domain)
          is to use either physical network layer type as base, possibly
          even just interface name on the router, if it's descriptive
          enough, for example, eth0.router1.example.com and
          wlan0.router1.example.com may be good enough. </t>

        </section>
      </section>

    </section>
    <section anchor="how" title="OSPFv3 auto-configuration TLVs">

      <t>To implement this specification fully, support for following three
      different new OSPFv3 auto-configuration TLVs is needed. However, only
      the DNS Delegated Zone TLVs MUST be supported, and the other two
      SHOULD be supported. </t>

      <section anchor="delegated-zone-tlv" title="DNS Delegated Zone TLV">

        <t>This TLV is effectively a combined NS and A/AAAA record for a
        zone. It MUST be supported by implementations conforming to this
        specification. Implementations SHOULD provide forward zone per link
        (or optimizing a bit, zone per link with Multicast DNS
        traffic). Implementations MAY provide reverse zone per prefix using
        this same mechanism. If multiple routers advertise same reverse
        zone, it should be assumed that they all have access to the
        link with that prefix.</t>

        <figure>
          <artwork>
0                   1                   2                   3
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|      TBD-BY-IANA-1            |           Length              |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                                                               |
|                           Address                             |
|                          (16 bytes)                           |
|                                                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|Reserved   |S|B| Zone (DNS label sequence - variable length)   |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
                      DNS Delegated Zone TLV
          </artwork>
        </figure>
        <t>
          <list style="hanging">

            <t hangText="Address"> field is IPv6 address (e.g. 2001:db8::3) or
            IPv4 address mapped to IPv6 address (e.g. ::FFFF:127.0.0.1) where the
            DNS server responsible for Zone can be found.
            </t>

            <t hangText="S"> indicates that this delegated zone consists of
            a full DNS-SD domain, which should be used as base for DNS-SD
            domain enumeration (that is, (field)._dns-sd._udp.(zone)
            exists). Forward zones MAY have this set. Reverse zones MUST
            NOT have this set. This can be used to provision DNS search
            path to clients.</t>

            <t hangText="B"> indicates that this delegated zone should be
            included in network's DNS-SD list of domains recommended for
            browsing at b._dns-sd._udp.(domain). Local forward zones SHOULD
            have this set. Reverse zones SHOULD NOT have this set.</t>

            <t hangText="Zone"> is the label sequence of the zone, encoded
            according to section 3.1. ("Name space definitions") of <xref
            target="RFC1035"/>. Note that name compression is not required
            here (and would not have any point in any case), as we encode
            the zones one by one. The zone MUST end with empty label. </t>

          </list>
        </t>

      </section>
      <section anchor="domain-name-tlv" title="Domain Name TLV">

        <t>This TLV is used to indicate the base (domain) to be used for
        the network, and it is a result of manual optional configuration on
        one or more routers. If multiple routers advertise different ones,
        the conflict resolution rules in <xref target="conflict"/> should
        result in only the one with highest router ID advertising one,
        eventually. In case of such conflict, user SHOULD be notified
        somehow about this, if possible, using the configuration interface
        or some other notification mechanism for the routers. </t>

        <t>This TLV SHOULD be supported if at all possible; even on routers
        without manual configuration options, being able to read the domain
        name provided by different router could make the user experience
        better.</t>


        <figure>
          <artwork>
0                   1                   2                   3
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|      TBD-BY-IANA-2            |           Length              |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|Name (not even null terminated - variable length)              |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
                         Domain Name TLV
          </artwork>
        </figure>

        <t>By default, if no router advertises domain name TLV, hard-coded
        default (TBD) should be used.</t>

      </section>
      <section anchor="router-name-tlv" title="Router Name TLV">
        <t>This TLV is used to advertise a router's name. After the
        conflict resolution procedure described in <xref target="conflict"/>
        finishes, there should be exactly zero to one routers publishing
        each router name.</t>

        <t>This TLV SHOULD be supported if at all possible; otherwise, if
        another router chooses to use the (link).(router) naming scheme,
        without manual configuration options, being able to read the domain
        name provided by different router could make the user experience
        better.</t>

        <figure>
          <artwork>
0                   1                   2                   3
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|      TBD-BY-IANA-3            |           Length              |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|Name (not even null terminated - variable length)              |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
                         Router Name TLV
          </artwork>
        </figure>

        <t>If the router name has been configured manually, and there is a
        conflict, user SHOULD be notified somehow about this, if possible,
        using the configuration interface or some other notification
        mechanism for the routers.</t>
      </section>
    </section>

    <section anchor="howto" title="Desirable router behavior">

      <section title="DNS search path">
        <t>The routers following this specification SHOULD provide the used
        (domain) as one item in the search path to it's clients, so that
        DNS-SD browsing will work correctly. They also SHOULD include any
        DNS Delegated Zone TLVs' zones, that have S bit set. </t>
      </section>

      <section title="Hybrid proxy">

        <t>The hybrid proxy implementation SHOULD support both forward
        zones, and IPv4 and IPv6 reverse zones. It SHOULD also detect
        whether or not there are any Multicast DNS entities on a link, and
        make that information available to OSPF daemon.</t>

        <t>Hybrid proxy SHOULD also publish it's own name via Multicast DNS
        (both forward A/AAAA records, as well as reverse PTR records) to
        facilitate applications that trace network topology. 
        </t>


      </section>
      <section title="OSPF daemon">

        <t>OSPF daemon should avoid publishing TLVs about links that have
        no Multicast DNS traffic to keep the DNS-SD browse domain list as
        concise as possible. It also SHOULD NOT publish delegated zones for
        links that it does not have highest router ID that supports this
        specification. (Support for this specification can be deduced by
        e.g. presence of any TLVs from this draft advertised by a router.)
        </t>

        <t>OSPF daemon (or other entity with access to the TLVs) SHOULD
        generate zone information for DNS implementation that will be used
        to serve the (domain) zone to clients. Domain Name TLV described in
        <xref target="domain-name-tlv"/> should be used as base for the
        zone, and then all DNS Delegated Zones described in <xref
        target="delegated-zone-tlv"/> should be used to produce the rest of
        the entries in zone (see <xref target="example-dns-zone"/> for example
        interpretation of the TLVs in <xref target="example-ospf"/>.</t>

      </section>
      
    </section>

    <section title="Security Considerations">

      <t>There is a trade-off between security and zero-configuration in
      general; if used routing protocol is not authenticated (and in
      zero-configuration case, it most likely is not), it is vulnerable to
      local spoofing attacks. We assume that this scheme is used either
      within (lower layer) secured networks, or with
      not-quite-zero-configuration routing protocol set-up which has
      authentication.</t>

      <t>If some sort of dynamic inclusion of links to be covered using
      border discovery or such is used, then effectively service discovery
      will share fate with border discovery (and also security issues if
      any).</t>

    </section>


    <section anchor="iana" title="IANA Considerations">

      <t>This document makes two allocations out of the OSPFv3 Auto-
      Configuration (AC) LSA TLV namespace <xref
      target="I-D.ietf-ospf-ospfv3-autoconfig"/>:

      <list style="symbols">

        <t>The DNS Delegated Zone TLV in <xref
        target="delegated-zone-tlv"/> takes the value TBD-BY-IANA-1
        (suggested value is 4).</t>

        <t>The Domain Name TLV in <xref target="domain-name-tlv"/> takes
        the value TBD-BY-IANA-2 (suggested value is 5).</t>

        <t>The Router Name TLV in <xref target="router-name-tlv"/> takes
        the value TBD-BY-IANA-3 (suggested value is 6).</t>

      </list>
      </t>
    </section>

  </middle>
  <back>
    <references title="Normative references">
      <?rfc include="reference.I-D.draft-cheshire-mdnsext-hybrid-01.xml"?>
      <?rfc include="reference.I-D.ietf-ospf-ospfv3-autoconfig.xml"?>
      <?rfc include="reference.RFC.1035.xml"?>
      <?rfc include="reference.RFC.2119.xml"?>
      <?rfc include="reference.RFC.6762.xml"?>
      <?rfc include="reference.RFC.6763.xml"?>
    </references>
    <references title="Informative references">
      <?rfc include="reference.I-D.draft-arkko-homenet-prefix-assignment-01.xml"?>
    </references>

    <section title="Example configuration">

<section title="Topology">
      <t>Let's assume home network that looks like this:</t>

      <figure>
        <artwork>
       |[0]
    +-----+
    | CER |
    +-----+
 [1]/    \[2]
   /      \
+-----+ +-----+
| IR1 |-| IR2 |
+-----+ +-----+
 |[3]|   |[4]|
        </artwork>
      </figure>

      <t>We're not really interested about links [0], [1] and [2], or the
      links between IRs. Given the optimization described in <xref
      target="delegated-zone-tlv"/>, they should not produce anything to
      OSPF state (and therefore to DNS either) as there isn't any Multicast
      DNS traffic there.
      </t>

      <t>The user-visible set of links are [3] and [4];
      each consisting of a LAN and WLAN link. 

      We assume that ISP provides 2001:db8::/48 prefix to be delegated in
      the home via [0].
      </t>
      
</section>


<section title="OSPF-DNS interaction">

      <t>Given implementation that chooses to use the second naming scheme
      (link).(router).(domain), and no configuration whatsoever, here's
      what happens (the steps are interleaved in practise but illustrated
      here in order):</t>
      <t>
      <list style="numbers">
          
        <t>OSPFv3 auto-configuration takes place, routers get their
        router IDs. For ease of illustration, CER winds up with 2, IR1
        with 3, and IR2 with 1. </t>
        
        <t>Prefix delegation takes place. IR1 winds up with
        2001:db8:1:1::/64 for LAN and 
        2001:db8:1:2::/64 for WLAN. IR2 winds up with
        2001:db8:2:1::/64 for LAN and 
        2001:db8:2:2::/64 for WLAN. </t>

        <t>IR1 is assumed to be reachable at 2001:db8:1:1::1 and IR2 at
      2001:db8:2:1::1. </t>
      

        <t>Each router wants to be called 'router' due to lack of
        branding in drafts. They announce that using the router name TLV
        defined in <xref target="router-name-tlv" />. They also
        advertise their local zones, but as that information may change,
        it's omitted here.</t>
        
        <t>Conflict resolution ensues. As IR1 has highest router ID, it
        becomes "router". CER and IR2 have to rename, and (depending on
        timing) one of them becomes "router-2" and other one
        "router-3". Let us assume IR2 is "router-2". During conflict
        resolution, each router publishes TLVs for it's own set of
        delegated zones. </t>

      </list>
      </t>
    </section>

    <section anchor="example-ospf" title="OSPF state">

      <t>Once there is no longer any conflict in the system, we wind up
      with following TLVs within OSPF (RN is used as abbreviation for
      Router Name, and DZ for Delegated Zone TLVs):
      </t>
      
      <figure>
        <artwork>
(from IR1)
RN {name="router"}

DZ {address=2001:db8:1:1::1, b=1, 
    zone="lan.router.example.com."}
DZ {address=2001:db8:1:1::1, 
    zone="1.0.0.0.1.0.0.0.8.b.d.0.1.0.0.2.ip6.arpa."}

DZ {address=2001:db8:1:1::1, b=1, 
    zone="wlan.router.example.com."}
DZ {address=2001:db8:1:1::1, 
    zone="2.0.0.0.1.0.0.0.8.b.d.0.1.0.0.2..ip6.arpa."}

(from IR2)
RN {name="router-2"}

DZ {address=2001:db8:2:1::1, b=1, 
    zone="lan.router-2.example.com."}
DZ {address=2001:db8:2:1::1, 
    zone="1.0.0.0.2.0.0.0.8.b.d.0.1.0.0.2.ip6.arpa."}

DZ {address=2001:db8:2:1::1, b=1, 
    zone="wlan.router-2.example.com."}
DZ {address=2001:db8:2:1::1, 
    zone="2.0.0.0.2.0.0.0.8.b.d.0.1.0.0.2.ip6.arpa."}

        </artwork>
      </figure>

    </section>
    <section anchor="example-dns-zone" title="DNS zone">
      <t>In the end, we should wind up with following zone for
      (domain) which is example.com in this case, available at all routers,
      just based on dumping the delegated zone TLVs as NS+AAAA records, and
      optionally domain list browse entry for DNS-SD:</t>
      <figure>
        <artwork>
b._dns_sd._udp PTR lan.router
b._dns_sd._udp PTR wlan.router

b._dns_sd._udp PTR lan.router-2
b._dns_sd._udp PTR wlan.router-2

router AAAA 2001:db8:1:1::1
router-2 AAAA 2001:db8:2:1::1

router NS router
router-2 NS router-2

1.0.0.0.1.0.0.0.8.b.d.0.1.0.0.2.ip6.arpa. NS router.example.com.
2.0.0.0.1.0.0.0.8.b.d.0.1.0.0.2.ip6.arpa. NS router.example.com.
1.0.0.0.2.0.0.0.8.b.d.0.1.0.0.2.ip6.arpa. NS router-2.example.com.
2.0.0.0.2.0.0.0.8.b.d.0.1.0.0.2.ip6.arpa. NS router-2.example.com.
        </artwork>
      </figure>
      <t>Internally, the router may interpret the TLVs as it chooses to, as
      long as externally defined behavior follows semantics of what's given
      in the above.</t>

    </section>

    </section>


  </back>
</rfc>
