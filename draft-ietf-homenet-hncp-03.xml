<?xml version='1.0' ?>
<!--
Created:       Mon Nov 18 17:55:22 2013 mstenber

split from draft-ietf-homenet-hncp-03-pre - homenet specific ones

-->

<!DOCTYPE rfc SYSTEM 'rfc2629.dtd'>

<?rfc autobreaks="yes"?>
<?rfc compact="yes"?>
<?rfc strict='yes'?>
<?rfc subcompact="no"?>
<?rfc symrefs="yes"?>
<?rfc toc="yes"?>
<?rfc tocindent="yes"?>

<rfc
    ipr='trust200902'
    docName='draft-ietf-homenet-hncp-03'
    category='std'
    >
  <front>
    <title abbrev="Home Networking Control Protocol">
      Home Networking Control Protocol
    </title>
    <author initials="M" surname="Stenberg" fullname="Markus Stenberg">
      <address>
        <postal>
          <street/>
          <city>Helsinki</city>
          <code>00930</code>
          <country>Finland</country>
        </postal>
        <email>markus.stenberg@iki.fi</email>
      </address>
    </author>
    <author initials="S" surname="Barth" fullname="Steven Barth">
      <address>
        <postal>
          <street/>
          <city>Halle</city>
          <code>06114</code>
          <country>Germany</country>
        </postal>
        <email>cyrus@openwrt.org</email>
      </address>
    </author>
    <author initials="P" surname="Pfister" fullname="Pierre Pfister">
        <organization>Cisco Systems</organization>
        <address>
            <postal>
                <street/>
                <city>Paris</city>
                <country>France</country>
            </postal> 		
            <email>pierre.pfister@darou.fr</email>
        </address>
    </author>
    <date month="December" year="2014" />

    <area>Internet</area>
    <workgroup>Homenet Working Group</workgroup>

    <keyword>IPv6</keyword>
    <keyword>Homenet</keyword>
    <keyword>DNCP</keyword>
    <abstract>

      <t>This document describes the Home Networking Control Protocol
      (HNCP), an extensible configuration protocol and a set of requirements
      for home network devices on top of the Distributed Node Consensus Protocol
      (DNCP). It enables automated configuration of addresses, naming,
      network borders and the seamless use of a routing protocol.</t>

    </abstract>
  </front>
  <middle>
    <section title="Introduction">

      <t>HNCP is designed to synchronize state across a small site
      in order to allow automated configuration.
      The protocol enables border discovery, address prefix distribution
      <xref target="I-D.ietf-homenet-prefix-assignment" />,
      naming and other services being used across multiple links.</t>

      <t>HNCP provides enough information for a routing protocol to operate
      without homenet-specific extensions. In homenet environments where
      multiple IPv6 source-prefixes can be present, routing based on source
      and destination address is necessary <xref target="RFC7368" />.</t>

      <t>A GPLv2-licensed implementation of HNCP is currently under
      development at <eref target="https://github.com/sbyx/hnetd/">
      https://github.com/sbyx/hnetd/</eref> and binaries are available in
      the <eref target="http://www.openwrt.org">OpenWrt</eref> package
      repositories.  See <eref
      target="http://www.homewrt.org/doku.php?id=run-conf" /> for more
      information.  Feedback and contributions are welcome.</t>
    </section>

    <section anchor="kwd" title='Requirements language'>

      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
      NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED",  "MAY", and
      "OPTIONAL" in this document are to be interpreted as described in
      <xref target='RFC2119'>RFC 2119</xref>.</t>

    </section>

    <section title="DNCP Profile">
      <t>HNCP is defined as a profile of DNCP with the following parameters:

      <list style="symbols">

        <t>HNCP uses UDP datagrams on port HNCP-UDP-PORT as a transport
        over link-local scoped IPv6, using unicast and multicast (group
        All-Homenet-Routers).  Received datagrams with an IPv6 source or
        destination address which is not link-local scoped MUST be
        ignored.</t>

        <t>HNCP unicast messages SHOULD be secured using <xref
        target="RFC6347">DTLS</xref> as described in DNCP if exchanged over
        unsecured links. UDP on port HNCP-DTLS-PORT is used for this
        purpose.  A node implementing the security mechanism MUST support
        the DNCP Pre-Shared Key method, SHOULD support the DNCP Certificate
        Based Trust Consensus and MAY support the PKI-based trust method.</t>

        <t>HNCP uses opaque 32-bit node identifiers
        (DNCP_NODE_IDENTIFIER_LENGTH = 32). A node implementing HNCP SHOULD
        generate and use a random node identifier. If it receives a Node State
        TLV with the same node identifier and a higher update sequence number,
        it MUST immediately generate and use a new random node identifier.</t>

        <t>HNCP nodes MUST treat all Long Network State Update messages
        received via multicast on a link which has DNCP security enabled as if
        they were Short Network State Update messages, i.e. they MUST ignore
        all contained Node State TLVs.</t>
        
        <t>HNCP nodes use the following Trickle parameters:

        <list style="symbols">
          <t>k SHOULD be 1, given the timer reset on data updates and
          retransmissions should handle packet loss.</t>

          <t>Imax SHOULD be 40 seconds but MUST NOT be lower.</t>

          <t>Imin SHOULD be 200 milliseconds but MUST NOT be lower.  Note:
          Earliest transmissions may occur at Imin/2.</t>

        </list>
        </t>

        <t>HNCP nodes MUST use the leading 64 bits of <xref
        target="RFC1321">MD5</xref> as DNCP non-cryptographic hash function
        H(x).</t>

        <t>HNCP nodes MUST use the periodic keep-alive mechanism over
        unicast to all peers. The keep-alive interval
        (DNCP_KEEPALIVE_INTERVAL) MUST be 24 seconds, the timeout interval
        (DNCP_TIMEOUT_INTERVAL) MUST be 2.5 times the keep-alive interval
        (60 seconds), the grace-interval (DNCP_GRACE_INTERVAL) SHOULD be
        equal to the keep-alive interval.</t>

      </list>
      </t>
    </section>

    <section title="Border Discovery" anchor="bd">

      <t>This section defines the border discovery algorithm derived from
      the edge router interactions described in the <xref
      target="RFC7084">Basic Requirements for IPv6 Customer Edge
      Routers</xref>. The algorithm is designed to work for both IPv4 and
      IPv6 (single or dual-stack) and MUST be implemented by any router
      implementing HNCP.</t>

      <t>In order to avoid conflicts between border discovery and homenet
      routers running <xref target="RFC2131">DHCPv4</xref> or <xref
      target="RFC3633">DHCPv6-PD</xref> servers, each router MUST implement
      the following mechanism based on <xref target="RFC3004">The User
      Class Option for DHCPv4</xref> and its <xref target="RFC3315">DHCPv6
      counterpart</xref>:

      <list style="symbols">

        <t>An HNCP-router running a DHCP client on a homenet interface
        MUST include a DHCP User-Class consisting of the ASCII-String
        "HOMENET".</t>

        <t>An HNCP-router running a DHCP-server on a homenet interface
        MUST ignore or reject DHCP-Requests containing a DHCP User-Class
        consisting of the ASCII-String "HOMENET".</t>

      </list>
      </t>

      <t>The border discovery auto-detection algorithm works as follows,
      with evaluation stopping at first match:

      <list style="numbers">
        <t>If a fixed category is set for the interface, it MUST be used.</t>

        <t>If a delegated prefix could be acquired by running a DHCPv6
        client on the interface it MUST be considered external.</t>

        <t>If an IPv4-address could be acquired by running a DHCP client
        on the interface it MUST be considered external.</t>

        <t>Otherwise the interface MUST be considered internal.</t>
      </list>
      </t>

      <t>A router MUST allow setting a category of either auto-detected,
      internal or external for each interface which is suitable for both
      internal and external connections. In addition the following
      specializations of the internal category are defined to modify the
      local router behavior:

      <list style="hanging">
        <t hangText="Leaf category:"> This declares an interface used by
        client devices only.  A router SHOULD implement this category and
        MUST NOT send nor receive HNCP messages on these interfaces.</t>

        <t hangText="Guest category:"> This declares an interface used by
        untrusted client devices only. In addition to the restrictions of
        the Leaf category, connected devices MUST NOT be able to reach other
        devices inside the HNCP network nor query services advertised by them
        unless explicitly allowed, instead they SHOULD only be able to reach
        the internet. This category SHOULD be supported.</t>

        <t hangText="Ad-hoc category:"> This declares an interface to be in
        ad-hoc mode. This indicates to HNCP applications such as prefix
        assignment that links on this interface are potentially
        non-transitive. This category MAY be implemented.</t>

        <t hangText="Hybrid category:"> This declares an interface to
        be internal while still using external connections on it. It
        is assumed that the link is under control of a legacy, trustworthy
        non-HNCP router, still within the same network. Detection of this
        category automatically in addition to manual configuration is
        out of scope for this document. This category MAY be implemented.</t>
      </list>
      </t>

      <t>Each router MUST continuously scan each active interface that does
      not have a fixed category in order to dynamically reclassify it if
      necessary.  The router therefore runs an appropriately configured
      DHCPv4 and DHCPv6 client as long as the interface is active including
      states where it considers the interface to be internal. The router
      SHOULD wait for a reasonable time period (5 seconds as a default),
      during which the DHCP clients can acquire a lease, before
      treating a newly activated or previously external interface as
      internal. Once it treats a certain interface as internal it MUST
      start forwarding traffic with appropriate source addresses between
      its internal interfaces and allow internal traffic to reach external
      networks according to the routes it publishes.
      Once a router detects an interface transitioning to external it MUST
      stop any previously enabled internal forwarding. In addition it
      SHOULD announce the acquired information for use in the network as
      described in later sections of this draft if the interface appears to
      be connected to an external network.</t>
    </section>

    <section title="Autonomic Address Configuration">
        <t>This section specifies how HNCP routers configure hosts and routers addresses using DNCP. Border routers first share information obtained from the service providers or configuration by publishing one or multiple External Connection TLVs. These TLVs contain other TLVs such as Delegated Prefix TLVs which are then used for prefix assignment. Finally, HNCP routers obtain addresses using SLAAC or a specific stateful mechanism and hosts are configured using SLAAC or DHCP.</t>
        
        <section title="External Connections">
            <t>Each HNCP router MAY obtain external connection information from one or multiple means, e.g., through <xref target="RFC3633">DHCPv6-PD</xref>, <xref target="RFC6241">Netconf</xref>, static configuration. This section specifies how such information is encoded and advertised using HNCP.</t>
            
            <section title="External Connection TLV">
                <t>An External Connection TLV is a container-TLV used to gather network configuration information associated with one single external connection. A node MAY publish zero, one or more instances of this TLV.</t>
                
                <figure>
                    <artwork>
0                   1                   2                   3
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
| Type: EXTERNAL-CONNECTION (33)|          Length: > 4          |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                          Nested TLVs                          |
                    </artwork>
                </figure>
                
                <t>The External Connection TLV:
                    <list style="symbols">
                        <t>MAY contain zero, one or more Delegated Prefix TLVs.</t>
                        <t>MUST NOT contain multiple Delegated Prefix TLVs with the same prefix. In such situation, the External Connection TLV MUST be ignored.</t>
                        <t>MAY contain zero or one DHCPv6 (resp. DHCPv4) Data TLV encoding DHCPv6 (resp. DHCPv4) options associated with the whole External Connection.</t>
                        <t>MUST NOT contain more than one DHCPv6 (resp. DHCPv4) Data TLV. If more than one such TLV is included, the External Connection TLV MUST be ignored.</t>
                        <t>MAY contain other TLVs for future use. Such TLVs MUST be ignored.</t>
                    </list>
                </t>
                
            </section>
            
            <section title="Delegated Prefix TLV">
                <t>The Delegated Prefix TLV is used by HNCP routers to advertise prefixes which are allocated to the whole network and will be used for prefix assignment. All Delegated Prefix TLVs MUST be nested in an External Connection TLV.</t>
                
                <figure>
                    <artwork>
0                   1                   2                   3
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|  Type: DELEGATED-PREFIX (34)  |         Length: >= 13         |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                        Valid Lifetime                         |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                      Preferred Lifetime                       |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
| Prefix Length |                                               |
+-+-+-+-+-+-+-+-+            Prefix [+ nested TLVs]             +
|                                                               |
                    </artwork>
                </figure>
                
                <t>
                    <list style="hanging">
                        <t hangText="Valid Lifetime: ">The time in seconds the delegated prefix
                            is valid. The value is relative to the point in time the Node-Data TLV
                            containing the External Connection TLV was last published.
                            It MUST be updated whenever the node republishes its Node-Data TLV.</t>
                        <t hangText="Preferred Lifetime: ">The time in seconds the delegated prefix
                            is preferred. The value is relative to the point in time the Node-Data TLV
                            containing the External Connection TLV was last published.
                            It MUST be updated whenever the node republishes its Node-Data TLV.</t>
                        <t hangText="Prefix Length: ">The number of significant bits in the Prefix.</t>
                        <t hangText="Prefix: ">Significant bits of the prefix padded with zeroes up to the next
                            byte boundary.</t>
                        <t hangText="Nested TLVs:">Other TLVs included in the Delegated Prefix TLV and starting at the next 32bits boundary following the end of the encoded prefix.
                            <list>
                                <t>If the encoded prefix represents an IPv6 prefix (resp. an IPv4-mapped IPv6 address), at most one DHCPv6 (resp. DHCPv4) Data TLV MAY be included. If more than one such TLV is included, or a DHCPv4 (resp. DHCPv6) Data TLV is included, the External Connection TLV containing the Delegated Prefix TLV MUST be ignored.</t>
                                <t>It MAY contain other TLVs for future use. Such TLVs MUST be ignored.</t>
                            </list>
                        </t>
                    </list>
                </t>
            </section>
            
            <section title="DHCP Data TLVs">
                <t>Auxiliary connectivity information is encoded as a stream of DHCPv6 or DHCPv4 options. Such TLVs MUST NOT be present unless included in an External Connection TLV or a Delegated Prefix TLV. When included in an External Connection TLV, they MUST contain DHCP options which are relevant to the whole External Connection. When included in a Delegated Prefix, they MUST contain DHCP options which are specific to the Delegated Prefix.</t>
                
                <t>The DHCPv6 Data TLV uses the following format:
                    <figure>
                        <artwork>
0                   1                   2                   3
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|    Type: DHCPV6-DATA (37)     |          Length: > 4          |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                      DHCPv6 option stream                     |
                        </artwork>
                    </figure>
                    <list style="hanging">
                        <t hangText="DHCPv6 option stream: ">DHCPv6 options encoded as specified in <xref target="RFC3315"/>.</t>
                    </list>
                </t>
                
                <t>The DHCPv4 Data TLV uses the following format:
                    <figure>
                        <artwork>
0                   1                   2                   3
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|     Type: DHCPV4-DATA (38)    |          Length: > 4          |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                       DHCPv4 option stream                    |
                        </artwork>
                    </figure>
                    <list style="hanging">
                        <t hangText="DHCPv4 option stream: ">DHCPv4 options encoded as specified in <xref target="RFC2131"/>.</t>
                    </list>
                </t>
                
                
            </section>
            
        </section>
        
        <section anchor="pa" title="Prefix Assignment">
            <t>HNCP uses the Distributed Prefix Assignment Algorithm specified in <xref target="I-D.ietf-homenet-prefix-assignment" /> in order to assign prefixes to HNCP internal links. In this section, terms defined in <xref target="I-D.ietf-homenet-prefix-assignment" /> are used and specific sections of this same document are referred to.</t>
            
            <section title="Assigned Prefix TLV">
            
            <t>Published Assigned Prefixes MUST be advertised using the Assigned Prefix TLV:</t>
            <figure>
                <artwork>
0                   1                   2                   3
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|  Type: ASSIGNED-PREFIX (35)   |          Length: >= 9         |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                        Link Identifier                        |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|  Rsv. | Prty. | Prefix Length |                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+            Prefix             +
|                                                               |
                </artwork>
            </figure>
            <t>
                <list style="hanging">
                    <t hangText="Link Identifier: ">The HNCP Link Identifier of the link the prefix is assigned to, or 0 if the link is a Private Link.</t>
                    <t hangText="Rsv.: ">Bits reserved for future use. MUST be set to zero by the node publishing the TLV and ignored when included in some Node Data.</t>
                    <t hangText="Prty: ">The Advertised Prefix Priority, from 0 to 15.</t>
                    <t hangText="Prefix Length: ">The number of significant bits in the Prefix field.</t>
                    <t hangText="Prefix: ">Significant bits of the prefix padded with zeroes up to the next byte boundary.</t>
                </list>
            </t>
            
            </section>
            
            <section title="Prefix Assignment Algorithm Parameters">
                
                <t>All HNCP routers MUST run the prefix assignment algorithm with the following parameters:
                    <list style="hanging">
                        <t hangText="Node IDs: ">HNCP Node Identifiers are used. The comparison operation is defined as the usual bit-wise comparison operation.</t>
                        <t hangText="Set of Delegated Prefixes: ">The set of prefixes encoded in Delegated Prefix TLVs which are not strictly included in prefixes encoded in other Delegated Prefix TLVs. Note that Delegated Prefix TLVs included in ignored External Connection TLVs are not considered. It is dynamicaly updated as Delegated Prefix TLVs are added or removed.</t>
                        <t hangText="Set of Shared Links: ">The set of HNCP internal links. It is dynamicaly updated as HNCP links are added, removed, become internal or are not internal anymore.</t>
                        <t hangText="Set of Private Links: ">This document defines Private Links representing DHCPv6-PD clients or as a mean to advertise prefixes included in the DHCPv6 Exclude Prefix options. Implementation may use other Private Links for other purposes.</t>
                        <t hangText="Set of Advertised Prefixes: ">The set of prefixes included in Assigned Prefix TLVs advertised by other HNCP routers. The associated Advertised Prefix Priority is the priority specified in the TLV. The associated Shared Link is determined as follows:
                            <list style="symbols">
                                <t>If the Link Identifier is zero, the Advertised Prefix is not assigned on a Shared Link.</t>
                                <t>If the Link Identifier is not zero, look at the set of DNCP Neighbor TLVs currently advertised by the local router such that:
                                    <list style="symbols">
                                        <t>The Neighbor Node Identifier is equal to the Node Identifier specified in the Node Data TLV including the considered Assigned Prefix TLV.</t>
                                        <t>The Neighbor Link Identifier is equal to the Link Identifier specified in the Assigned Prefix TLV.</t>
                                        <t>The node identified by the Neighbor Node Identifier is advertising another Neighbor TLV containing the local node identifier as Neighbor Node Identifier and the Link Identifier specified in the considered Neighbor TLV as Neighbor Link Identifier.</t>
                                    </list>
                                    If a corresponding Neighbor TLV is found, the Advertised Prefix is associated with the Shared Link identified by the Local Link Identifier specified in the Neighbor TLV.
                                </t>
                            </list>
                            Advertised Prefixes as well as their associated priorities and links MUST be updated as Assigned Prefix TLVs or Neighbor TLVs are added, removed or updated.
                        </t>
                        <t hangText="ADOPT_MAX_DELAY: ">The default value is 0 seconds (i.e. prefix adoption MAY be done instantly).</t>
                        <t hangText="BACKOFF_MAX_DELAY: ">The default value is 4 seconds.</t>
                        <t hangText="RANDOM_SET_SIZE: ">The default value is 64.</t>
                        <t hangText="Flooding Delay: ">The default value is 5 seconds.</t>
                        <t hangText="Default Advertised Prefix Priority: ">When a new assignement is created or an assignment is adopted, as specified in the prefix assignment algorithm routine, the default Advertised Prefix Priority to be used is 2.</t>
                    </list>
                </t>
                
            </section>
            
            <section title="Making New Assignments">
                
            <t>Whenever the Prefix Assignment Algorithm routine is executed on an internal HNCP link and whenever a new prefix may be assigned (case 1 of the routine), the decision of whether the assignment of a new prefix is desired MUST follow these rules:
                <list style="hanging">
                    <t>If the External Connection TLV or the Delegated Prefix TLV contains a DHCPv4 or DHCPv6 Data TLV, and the meaning of one of the DHCP option is not understood by the HNCP router, the creation of a new prefix is desired.</t>
                    <t>If the remaining prefix preferred lifetime is null and there is another delegated prefix, used for prefix assignment, with a non-null preferred lifetime, the creation of a new prefix is desired.</t>
                    <t>Otherwise, the creation of a new prefix is desired.</t>
                </list>
                If the considered delegated prefix is an IPv6 prefix, and whenever there is at least one available prefix of length 64, a prefix of length 64 MUST be selected. In case no prefix of length 64 would be available, a longer prefix MAY be selected.
                If the considered delegated prefix is an IPv4 prefix, prefix of length 24 SHOULD be preferred.
            </t>
            
            </section>
            
            <section title="Applying Assigned Prefixes">
                <t>TODO</t>
            </section>
            
            <section title="DHCPv6-PD Excluded Prefix Support">
                <t>Whenever a delegated prefix is received alongwith a <xref target="RFC6603" >DHCPv6 Prefix Exclude option</xref>, the excluded prefix MUST be advertised as assigned on a Private Link with the maximal priority (i.e. 15).</t>
                <t>The same procedure MAY be applied in order to exclude prefixes obtained by other means of configuration.</t>
            </section>
            
            <section title="Downstream Prefix Delegation Support">
                <t>When a HNCP router receives a request for prefix delegation, it SHOULD assign a set of prefixes, wait for them to be applied, and delegate them to the client. Such assignment MUST be done in full conformance of the Prefix Assignment Algorithm. Each client MUST be considered as an independent Private Link and prefix delegation MUST be based on the same set of Delegated Prefixes.</t>
                <t>The assigned prefixes MUST NOT be given to clients before they are applied, and MUST be withdrawned whenever they are destroyed.</t>
            </section>
            
        </section>
        
        <section title="Router's Address Assignment">
            <t>This section specifies how HNCP routers reserve addresses for their own use. Routers MAY, at any time, try to reserve a new address. For any IPv6 prefix of length 64, SLAAC MUST be used for that purpose. For IPv4 prefixes, or whenever the IPv6 prefix length is not 64, routers MUST use the procedure specified in this section.</t>
            
            <t>For any assigned prefix, the last quarter of the addresses are reserved for routers HNCP based assignments. The three first quarters are reserved for DHCP based allocations. For instance, if the prefix 10.0.1.0/24 is assigned and applied to some HNCP link, addresses included in 10.0.1.192/26 are reserved for HNCP routers, while addresses included in 10.0.1.128/26 and 10.0.1.0/25 are reserved for allocations by the mean of DHCP.</t>
            
            <t>HNCP routers assign themselves addresses using the Node Address TLV:
                <figure>
                    <artwork>
0                   1                   2                   3
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|    Type: NODE-ADDRESS (36)    |           Length: 24          |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                        Link Identifier                        |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                                                               |
|                           IP-Address                          |
|                                                               |
|                                                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
                    </artwork>
                </figure>
                <list style="hanging">
                    <t hangText="Link Identifier: ">The HNCP Link Identifier of the link the address is assigned to, or 0 if it is not assigned on a HNCP enabled link.</t>
                    <t hangText="IP-Address: ">The IPv6 address, or the IPv4 address encoded as an IPv4-mapped IPv6 address.</t>
                </list>
            </t>
            
            <t>Additionaly, the process of obtaining addresses is specified as follows:
                <list style="symbols">
                    <t>An assigned address MUST be in the last quarter of an assigned prefix, currently applied on the specified link (see <xref target="I-D.ietf-homenet-prefix-assignment" />).</t>
                    <t>An address MUST NOT be used unless it has been advertised for NODE_ADDRESS_BACKOFF consecutive seconds, and is still currently advertised.</t>
                    <t>Whenever the same address is advertised by another HNCP node, only the TLV advertised by the node with the greatest ID among conflicting Node Addresses TLVs may be kept. Other conflicting TLVs MUST be removed.</t>
                </list>
            </t>
            
        </section>
        
        <section title="Host Configuration">
            <t>This section specifies how routers must behave in order to configure hosts by the mean of router advertisements and, when necessary, DHCP servers.</t>
            
            <section title="Sending Router Advertisements">
                <t>All HNCP routers MUST send Router Advertisements (RAs) on all internal interfaces and MUST NOT send RAs on external interfaces.</t>
                
                <t>The router advertisements (RAs) MUST include a Prefix Information Options for each IPv6 prefix assigned to the considered link, applied and advertised. SLAAC MUST be enabled when the prefix length is 64. The specified valid and preferred lifetimes MUST be set to values lower or equal to the associated valid and preferred lifetimes from the delegated prefix the assigned prefix is from.</t>
                    
                 <t>Whenever at least one IPv6 default route (source-specific or not) which next-hop is not located on the considered link is present in the RIB, the designated router MUST advertise itself as default router by specifying a strictly positive valid lifetime.</t>
                 
                 <t>Whenever at least one source-specific IPv6 default route which next-hop is not located on the considered link and which source-prefix equals a delegated prefix used for prefix assignment, the router MUST advertise itself as a router for all IPv6 delegated prefixes using <xref target="RFC4191">Route Information Options</xref>.</t>
            </section>
            
            <section title="DHCP operations">
                <t>Whenever an IPv4 prefix is advertised on a given link, or whenever the use of stateless or statefull DHCPv6 is required, a single DHCPv4 and / or DHCPv6 server MUST be elected. The Link Election TLV is defined for that purpose:
                    <figure>
                        <artwork>
0                   1                   2                   3
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|   Type: LINK-ELECTION (36)    |           Length: 8           |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                        Link Identifier                        |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
| DH4 | DH6 |                    Reserved.                      |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
                        </artwork>
                    </figure>
                    <list style="hanging">
                        <t hangText="Link Identifier: ">The HNCP Link Identifier of the link the election is made on. It MUST NOT be set to zero by the node publishing the TLV, and MUST be ignored whenever it is set to zero by another node.</t>
                        <t hangText="DH4: ">The DHCPv4 candidate priority. It is set to 0 if the node does not candidate as DHCPv4 server on the given link.</t>
                        <t hangText="DH6: ">The DHCPv6 candidate priority. It is set to 0 if the node does not candidate as DHCPv6 server on the given link.</t>
                        <t hangText="Reserved: ">TLV alignment leaves room for other similar election mechanisms. These bits MUST be set to zero by the node publishing the TLV and MUST be ignored when published by another node.</t>
                    </list>
                </t>
                
                <t>HNCP routers run independent election processes on each internal link. A Link Election TLV is considered as advertised on a link in the same way an Assigned Prefix TLV is associated to a given Shared Link (see <xref target="pa"/>). The HNCP router advertising the Link Election TLV specifying the highest and not null DHCPv6 (resp. DHCPv4) priority MUST run a DHCPv6 (resp. DHCPv4) server (In case of a tie, the node with the greatest node identifier is elected).</t>
                
                <t>DHCPv4 and DHCPv6 servers MUST be configured to provide addresses from each assigned and applied prefixes, while excluding addresses included in the last quarter of each assigned prefix.</t>
                
                <t>All HNCP routers advertising an IPv4 prefix as assigned on a link MUST candidate as DHCP server. Which means that all routers unable to run a DHCP server MUST NOT advertise a new IPv4 prefix or adopt an existing one.</t>
                
                <t>All HNCP routers advertising an IPv6 prefix requiring specific configuration from a DHCPv6 server MUST candidate as DHCPv6 server. Which means that a router unable to run a DHCPv6 server MUST NOT advertise an IPv6 prefix requiring a DHCPv6 server to be run, or adopt such an existing prefix.</t>
                
                <t>All HNCP routers SHOULD support DHCPv6 Prefix Delegation. Such routers MUST candidate as DHCPv6 routers. When a DHCPv6-PD request is received, HNCP routers MUST behave as specified in <!-- TBD XXX xref target="downstream" / -->.</t>
                
            </section>
        </section>
        
        <section title="IPv4 and ULA delegated prefixes">
            <t>TODO</t>
        </section>
        
    </section>

    <section title="Naming and Service Discovery">

      <t>Network-wide naming and service discovery can greatly improve the
      user-friendliness of an IPv6 network. The following mechanism provides
      means to setup and delegate naming and service discovery across
      multiple HNCP routers.</t>

      <t>Each HNCP router SHOULD provide and announce an auto-generated or
      user-configured name for each internal link for which it is the
      designated DHCP or stateful DHCPv6-server and provide DNS-services on
      behalf of devices on said link. This SHOULD be achieved by proxying
      <xref target="RFC6762">MDNS</xref> and / or resolving device hostnames
      acquired using DHCPv4, DHCPv6 or other means via DNS. In addition
      reverse lookup services and delegations MAY be provided similarly.</t>

      <t>The following TLVs are defined and MUST be supported by all nodes
      implementing naming and service discovery:</t>

      <section anchor="delegated-zone-tlv" title="DNS Delegated Zone TLV">

        <t>This TLV is used to announce a forward or reverse DNS zone
        delegation in the HNCP network. Its meaning is roughly equivalent
        to specifying an NS and A/AAAA record for said zone. There MUST NOT
        be more than one delegation for the same zone in the whole DNCP
        network. In case of a conflict the announcement of the node with
        the highest node identifier takes precedence and all other nodes
        MUST cease to announce the conflicting TLV.</t>

        <figure>
          <artwork>
0                   1                   2                   3
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
| Type: DNS-DELEGATED-ZONE (39) |        Length: >= 21          |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                                                               |
|                           IP-Address                          |
|                                                               |
|                                                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|reserved |L|B|S|                                               |
+-+-+-+-+-+-+-+-+  Zone (DNS label sequence - variable length)  |
|                                                               |
          </artwork>
        </figure>

        <t>
          <list>
            <t>IP Address is the IPv6-address of the authoritative
            DNS-server for the zone; IPv4-addresses are represented as
            <xref target="RFC4291">IPv4-mapped addresses</xref>.  The
            special value of :: (all-zero) means the delegation is
            available in the global DNS-hierarchy.</t>

            <t>reserved bits MUST be zero when creating and ignored when
            parsing this TLV.</t>

            <t>L-bit (<xref target="RFC6763">DNS-SD</xref> Legacy-Browse)
            indicates that this delegated zone should be included in the
            network's DNS-SD legacy browse list of domains at lb._dns-
            sd._udp.(DOMAIN-NAME).  Local forward zones SHOULD have this
            bit set, reverse zones SHOULD NOT.</t>

            <t>B-bit (<xref target="RFC6763">DNS-SD</xref> Browse)
            indicates that this delegated zone should be included in the
            network's DNS-SD browse list of domains at b._dns-sd._udp.
            (DOMAIN-NAME).  Local forward zones SHOULD have this bit set,
            reverse zones SHOULD NOT.</t>

            <t>S-bit (fully-qualified <xref target="RFC6763">DNS-SD</xref>
            -domain) indicates that this delegated zone consists of a
            fully-qualified DNS-SD domain, which should be used as base for
            DNS-SD domain enumeration, i.e. _dns-sd._udp.(Zone) exists.
            Forward zones MAY have this bit set, reverse zones MUST NOT.
            This can be used to provision DNS search path to hosts for
            non-local services (such as those provided by an ISP, or other
            manually configured service providers). Zones with this flag
            SHOULD be added to the search domains advertised to clients.</t>

            <t>Zone is the label sequence of the zone, encoded according to
            <xref target="RFC1035"/>.  Compression MUST NOT be used. The
            zone MUST end with an empty label.</t>

          </list>
        </t>
      </section>


      <section anchor="domain-name-tlv" title="Domain Name TLV">

        <t>This TLV is used to indicate the base domain name for the
        network.  It is the zone used as a base for all non fully-qualified
        delegated zones and node names.  In case of conflicts the announced
        domain of the node with the highest node identifier takes precedence.
        By default ".home" is used, i.e. if no node advertises such a TLV.</t>

        <figure>
          <artwork>
0                   1                   2                   3
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|    Type: DOMAIN-NAME (40)     |         Length: >= 4          |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|        Domain (DNS label sequence - variable length)          |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
          </artwork>
        </figure>

        <t>
          <list>
            <t>Domain is the label sequence encoded according to <xref
            target="RFC1035"/>.  Compression MUST NOT be used. The zone
            MUST end with an empty label.</t>
          </list>
        </t>

      </section>
      <section anchor="router-name-tlv" title="Node Name TLV">

        <t>This TLV is used to announce the name of a node in the network.
        In case of conflicts the announcement of the node with the highest
        node identifier takes precedence and all other nodes MUST cease to
        announce the conflicting TLV. A node announcing such a TLV
        MUST also announce at least one Node-Address TLV which is used
        as destination address.</t>

        <figure>
          <artwork>
0                   1                   2                   3
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|     Type: NODE-NAME (41)      |         Length: >= 4          |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Name (not null-terminated - variable length)          |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
          </artwork>
        </figure>
      </section>
    </section>


    <section title="Securing Third-Party Protocols">
      <t>Pre-shared keys are often required to secure IGPs and other
      protocols which lack support for asymmetric security. The following
      mechanism manages PSKs using HNCP to enable bootstrapping of such
      third-party protocols and SHOULD therefore be used if such a need
      arises. The following rules define how such a PSK is managed and used:

      <list style="symbols">
        <t>If no Managed-PSK-TLV is currently being announced, an HNCP
        router MUST create one with a 32-Byte long random key and add it to
        its node-data.</t>
        <t>In case multiple routers announce such a TLV at the same time,
        all but the one with the highest router-ID stop advertising it and
        adopt the remaining one.</t>
        <t>The router currently advertising the Managed-PSK-TLV must
        generate and advertise a new random one whenever an unreachable node
        is purged as described in DNCP.</t>
      </list>
      </t>

      <figure>
        <artwork>
0                   1                   2                   3
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|    Type: Managed-PSK (42)     |          Length: 36           |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                                                               |
|                                                               |
|                                                               |
|                           Random PSK                          |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
        </artwork>
      </figure>

      <t>PSKs for individual protocols are derived from the random PSK
      through the use of <xref target="RFC6234">HMAC-SHA256</xref> with a
      pre-defined per-protocol HMAC-key in ASCII-format. The following
      HMAC-keys are currently defined to derive PSKs for the respective
      protocols:

      <list>
        <t>"ROUTING": to be used for IGPs</t>
      </list>
      </t>
    </section>

    <section anchor="version-tlv" title="HNCP-Versioning">

      <t>Multiple versions of HNCP based on compatible DNCP profiles may be
      present in the same network when transitioning between HNCP versions.
      The following mechanism describes a way to announce the currently active
      version and User-agent of a node. Each node MUST include an
      HNCP-Version-TLV in its Node Data and MUST ignore (except for DNCP
      synchronisation purposes) any TLVs with a type greater than 32 of nodes
      not publishing an HNCP-Version TLV or publishing such a TLV with a
      different Version number.</t>

      <figure>
        <artwork>
0                   1                   2                   3
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|    Type: HNCP-VERSION (32)    |         Length: >= 9          |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|    Version    |                  (reserved)                   |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                          User-agent                           |
        </artwork>
      </figure>

      <t>Version indicates which version of HNCP is currently in use by
      this particular node. It MUST be set to 0.</t>

      <t>(reserved) bits must be set to 0 when creating and ignored when
      parsing this TLV.</t>

      <t>The user-agent is a null-terminated human-readable UTF-8 string
      that describes the name and version of the current HNCP
      implementation.</t>

    </section>

    <section title="Requirements for HNCP Routers">
      <t>Each router implementing HNCP is subject to the following
      requirements:
      <list style="symbols">
        <t>It MUST implement HNCP-Versioning, Border Discovery and Prefix
        Assignment as defined in this document.</t>
        <t>It MUST implement and run the method for securing third-party
        protocols whenever it uses the security mechanism of HNCP.</t>
        <t>It SHOULD implement support for the Service Discovery and Naming
        TLVs as defined in this document.</t>
        <t>It MUST implement and run the routing protocol $FOO [RFCXYZ]
        with support for source-specific routes on all of the interfaces it
        sends and receives HNCP-messages on and MUST resort to announcing
        source-specific routes for external destinations appropriately.</t>
        <t>It MUST use adequate security mechanisms for the routing
        protocol on any interface where it also uses the security
        mechanisms of HNCP. If the security mechanism is based on a PSK it
        MUST use a PSK derived from the Managed-PSK to secure the IGP.</t>
        <t>It MUST comply with the <xref target="RFC7084">Basic
        Requirements for IPv6 Customer Edge Routers</xref> unless it would
        otherwise conflict with any requirements in this document (e.g. prefix
        assignment mandating a different prefix delegation and DHCP server
        election strategy). In general "WAN interface requirements" shall
        apply to external interfaces and "LAN interface requirements"
        to internal interfaces respectively.</t>
        <t>It SHOULD be able to provide connectivity to IPv4-devices using
        DHCP.</t>
        <t>It SHOULD be able to delegate prefixes to legacy IPv6-routers
        using DHCPv6-PD.</t>
      </list></t>
    </section>

    <section title="Security Considerations">

      <t>HNCP enables self-configuring networks, requiring
      as little user intervention as possible. However this
      zero-configuration goal usually conflicts with security goals and
      introduces a number of threats.</t>

      <t>General security issues for existing home networks are discussed
      in <xref target="RFC7368" />. The protocols used to set up addresses
      and routes in such networks to this day have rarely security enabled
      within the configuration protocol itself. However these issues are out
      of scope for the security of HNCP itself.</t>
      
      <t>HNCP is a DNCP-based state synchronization mechanism carrying
      information with varying threat potential. For this consideration the
      payloads defined in DNCP and this document are reviewed:

      <list style="symbols">
        <t>Network topology information such as HNCP nodes and their
        adjacent links</t>

        <t>Address assignment information such as delegated and assigned
        prefixes for individual links</t>

        <t>Naming and service discovery information such as auto-generated
        or customized names for individual links and routers</t>

      </list>
      </t>

      <section title="Border Determination">

        <t>As described in <xref target="bd" />, a HNCP router determines
        the internal or external state on a per-link basis. A firewall
        perimeter is set up for the external links, and for internal links,
        HNCP and IGP traffic is allowed.</t>

        <t>Threats concerning automatic border discovery cannot be
        mitigated by encrypting or authenticating HNCP traffic itself since
        external routers do not participate in the protocol and often
        cannot be authenticated by other means. These threats include
        propagation of forged uplinks in the homenet in order to
        e.g. redirect traffic destined to external locations and forged
        internal status by external routers to e.g. circumvent the
        perimeter firewall.</t>

        <t>It is therefore imperative to either secure individual links on
        the physical or link-layer or preconfigure the adjacent interfaces
        of HNCP routers to an adequate fixed-category in order to secure
        the homenet border.  Depending on the security of the external link
        eavesdropping, man-in-the-middle and similar attacks on external
        traffic can still happen between a homenet border-router and the
        ISP, however these cannot be mitigated from inside the homenet. For
        example, DHCP has defined <xref target="RFC3118" /> to authenticate
        DHCP messages, but this is very rarely implemented in large or
        small networks.  Further, while PPP can provide secure
        authentication of both sides of a point to point link, it is most
        often deployed with one-way authentication of the subscriber to the
        ISP, not the ISP to the subscriber.</t>

      </section>

      <section title="Security of Unicast Traffic">

        <t>Once the homenet border has been established there are several
        ways to secure HNCP against internal threats like manipulation or
        eavesdropping by compromised devices on a link which is enabled for
        HNCP traffic. If left unsecured attackers may perform arbitrary
        eavesdropping, spoofing or denial of service attacks on HNCP services
        such as address assignment or service discovery.</t>
        

        <t>Detailed interface categories like "leaf" or "guest" can be used
        to integrate not fully trusted devices to various degrees into the
        homenet by not exposing them to HNCP and IGP traffic or by using
        firewall rules to prevent them from reaching homenet-internal
        resources. </t>

        <t>On links where this is not practical and lower layers do not
        provide adequate protection from attackers, DNCP secure mode MUST be
        used to secure traffic.</t>

      </section>

      <section title="Other Protocols in the Home">

        <t>IGPs and other protocols are usually run alongside HNCP therefore
        the individual security aspects of the respective protocols must be
        considered.  It can however be summarized that many protocols to be
        run in the home (like IGPs) provide - to a certain extent - similar
        security mechanisms.  Most of these protocols do not support
        encryption and only support authentication based on pre-shared keys
        natively.  This influences the effectiveness of any encryption-based
        security mechanism deployed by HNCP as homenet routing information is
        thus usually not encrypted.</t>

      </section>

    </section>

    <section anchor="iana" title="IANA Considerations">

      <t>IANA is requested to maintain a registry for HNCP TLV-Types.</t>
      <t>HNCP inherits the TLV-Types defined in DNCP.
      In addition the following TLV-Types are defined in this document:

      <list>
        <t>32: HNCP-Version</t>
        <t>33: External-Connection</t>
        <t>34: Delegated-Prefix</t>
        <t>35: Assigned-Prefix</t>
        <t>36: Node-Address</t>
        <t>37: DHCPv4-Data</t>
        <t>38: DHCPv6-Data</t>
        <t>39: DNS-Delegated-Zone</t>
        <t>40: Domain-Name</t>
        <t>41: Node-Name</t>
        <t>42: Managed-PSK</t>
        <t>TBD: Link-Election</t>
      </list>
      </t>

      <t>HNCP requires allocation of UDP port numbers
      HNCP-UDP-PORT and HNCP-DTLS-PORT, as well as an IPv6 link-local
      multicast address All-Homenet-Routers.</t>

    </section>

  </middle>
  <back>
    <references title="Normative references">
      <?rfc include="reference.RFC.2119.xml"?>
      <?rfc include="reference.RFC.6347.xml"?>
      <?rfc include="reference.RFC.6603.xml"?>
      <?rfc include="reference.RFC.4191.xml"?>
      <?rfc include="reference.I-D.draft-ietf-homenet-prefix-assignment-01"?>
    </references>

    <references title="Informative references">
      <?rfc include="reference.RFC.7084.xml"?>
      <?rfc include="reference.RFC.3004.xml"?>
      <?rfc include="reference.RFC.3118.xml"?>
      <?rfc include="reference.RFC.2131.xml"?>
      <?rfc include="reference.RFC.3315.xml"?>
      <?rfc include="reference.RFC.3633.xml"?>
      <?rfc include="reference.RFC.1918.xml"?>
      <?rfc include="reference.RFC.4291.xml"?>
      <?rfc include="reference.RFC.7368.xml"?>
      <?rfc include="reference.RFC.1035.xml"?>
      <?rfc include="reference.RFC.6234.xml"?>
      <?rfc include="reference.RFC.1321.xml"?>
      <?rfc include="reference.RFC.6762.xml"?>
      <?rfc include="reference.RFC.6763.xml"?>
      <?rfc include="reference.RFC.6241.xml"?>
    </references>

    <section title="Changelog">

      <t>draft-ietf-homenet-hncp-03: Split to DNCP (generic protocol) and
      HNCP (homenet profile).</t>

      <t>draft-ietf-homenet-hncp-02: Removed any built-in security. Relying
      on IPsec. Reorganized interface categories, added requirements languages,
      made manual border configuration a MUST-support. Redesigned routing
      protocol election to consider non-router devices.</t>

      <t>draft-ietf-homenet-hncp-01: Added (MAY) guest, ad-hoc, hybrid
      categories for interfaces. Removed old hnetv2 reference, and now
      pointing just to OpenWrt + github. Fixed synchronization algorithm to
      spread also same update number, but different data hash case. Made
      purge step require bidirectional connectivity between nodes when
      traversing the graph. Edited few other things to be hopefully
      slightly clearer without changing their meaning. </t>

      <t>draft-ietf-homenet-hncp-00: Added version TLV to allow for TLV content
      changes pre-RFC without changing IDs. Added link id to assigned
      address TLV. </t>

    </section>

    <section title="Draft source">
      <t>This draft is available at <eref
      target="https://github.com/fingon/ietf-drafts/">https://github.com/fingon/ietf-drafts/</eref>
      in source format. Issues and pull requests are welcome.</t>
    </section>

    <section title="Acknowledgements">

      <t>Thanks to Ole Troan, Pierre Pfister, Mark Baugher, Mark Townsley
      and Juliusz Chroboczek for their contributions to the draft.</t>

      <t>Thanks to Eric Kline for the original border discovery work.</t>

    </section>

  </back>
</rfc>
